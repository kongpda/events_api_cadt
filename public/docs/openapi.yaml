openapi: 3.0.3
info:
  title: Laravel
  description: ''
  version: 1.0.0
servers:
  -
    url: 'http://events_api.test'
paths:
  /api/events:
    get:
      summary: ''
      operationId: getApiEvents
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data: []
                  links:
                    first: 'http://events_api.test/api/events?page=1'
                    last: 'http://events_api.test/api/events?page=1'
                    prev: null
                    next: null
                  meta:
                    current_page: 1
                    from: null
                    last_page: 1
                    links:
                      -
                        url: null
                        label: '&laquo; Previous'
                        active: false
                      -
                        url: 'http://events_api.test/api/events?page=1'
                        label: '1'
                        active: true
                      -
                        url: null
                        label: 'Next &raquo;'
                        active: false
                    path: 'http://events_api.test/api/events'
                    per_page: 15
                    to: null
                    total: 0
                properties:
                  data:
                    type: array
                    example: []
                  links:
                    type: object
                    properties:
                      first:
                        type: string
                        example: 'http://events_api.test/api/events?page=1'
                      last:
                        type: string
                        example: 'http://events_api.test/api/events?page=1'
                      prev:
                        type: string
                        example: null
                      next:
                        type: string
                        example: null
                  meta:
                    type: object
                    properties:
                      current_page:
                        type: integer
                        example: 1
                      from:
                        type: string
                        example: null
                      last_page:
                        type: integer
                        example: 1
                      links:
                        type: array
                        example:
                          -
                            url: null
                            label: '&laquo; Previous'
                            active: false
                          -
                            url: 'http://events_api.test/api/events?page=1'
                            label: '1'
                            active: true
                          -
                            url: null
                            label: 'Next &raquo;'
                            active: false
                        items:
                          type: object
                          properties:
                            url:
                              type: string
                              example: null
                            label:
                              type: string
                              example: '&laquo; Previous'
                            active:
                              type: boolean
                              example: false
                      path:
                        type: string
                        example: 'http://events_api.test/api/events'
                      per_page:
                        type: integer
                        example: 15
                      to:
                        type: string
                        example: null
                      total:
                        type: integer
                        example: 0
      tags:
        - Endpoints
      security: []
    post:
      summary: ''
      operationId: postApiEvents
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: goyaqsgrtwgokghpr
                  nullable: false
                slug:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: fqfqdciyauxelnhxgaar
                  nullable: false
                description:
                  type: string
                  description: 'Must not be greater than 65535 characters.'
                  example: 'Debitis ut similique atque expedita.'
                  nullable: false
                address:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: sjx
                  nullable: false
                feature_image:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: prrywsjvrwkrdwtoxdssx
                  nullable: true
                start_date:
                  type: string
                  description: 'Must be a valid date.'
                  example: '2025-02-09T15:38:40'
                  nullable: false
                end_date:
                  type: string
                  description: 'Must be a valid date. Must be a date after <code>start_date</code>.'
                  example: '2061-11-06'
                  nullable: false
                category_id:
                  type: string
                  description: 'The <code>id</code> of an existing record in the categories table.'
                  example: qui
                  nullable: false
                user_id:
                  type: string
                  description: 'The <code>id</code> of an existing record in the users table.'
                  example: libero
                  nullable: false
                organizer_id:
                  type: string
                  description: 'The <code>id</code> of an existing record in the organizers table.'
                  example: recusandae
                  nullable: false
                participation_type:
                  type: string
                  description: ''
                  example: paid
                  nullable: false
                  enum:
                    - paid
                    - free
                capacity:
                  type: integer
                  description: 'Must be at least 1.'
                  example: 49
                  nullable: false
                registration_deadline:
                  type: string
                  description: 'Must be a valid date. Must be a date before <code>start_date</code>.'
                  example: '2015-04-08'
                  nullable: false
                registration_status:
                  type: string
                  description: ''
                  example: closed
                  nullable: false
                  enum:
                    - open
                    - closed
                    - full
                event_type:
                  type: string
                  description: ''
                  example: hybrid
                  nullable: false
                  enum:
                    - in_person
                    - online
                    - hybrid
                online_url:
                  type: string
                  description: 'This field is required when <code>event_type</code> is <code>online</code> or <code>hybrid</code>.  Must be a valid URL.'
                  example: 'http://www.haag.com/iure-quos-quibusdam-earum-nam-harum.html'
                  nullable: true
                tags:
                  type: array
                  description: 'The <code>id</code> of an existing record in the tags table.'
                  example: null
                  items:
                    type: string
              required:
                - title
                - slug
                - description
                - address
                - start_date
                - end_date
                - category_id
                - user_id
                - organizer_id
                - participation_type
                - capacity
                - registration_deadline
                - registration_status
                - event_type
      security: []
  '/api/events/{slug}':
    get:
      summary: ''
      operationId: getApiEventsSlug
      description: ''
      parameters: []
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'No query results for model [App\Models\Event] voluptatem'
                properties:
                  message:
                    type: string
                    example: 'No query results for model [App\Models\Event] voluptatem'
      tags:
        - Endpoints
      security: []
    put:
      summary: ''
      operationId: putApiEventsSlug
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: yvakmqdlutfugdf
                  nullable: false
                slug:
                  type: string
                  description: ''
                  example: null
                  nullable: false
                description:
                  type: string
                  description: 'Must not be greater than 65535 characters.'
                  example: 'Quod rerum magni eligendi aut facilis sunt.'
                  nullable: false
                address:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: lxgamahiiclaizccogjjxw
                  nullable: false
                feature_image:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: evqltceaetr
                  nullable: true
                start_date:
                  type: string
                  description: 'Must be a valid date.'
                  example: '2025-02-09T15:38:40'
                  nullable: false
                end_date:
                  type: string
                  description: 'Must be a valid date. Must be a date after <code>start_date</code>.'
                  example: '2087-04-21'
                  nullable: false
                category_id:
                  type: string
                  description: 'The <code>id</code> of an existing record in the categories table.'
                  example: modi
                  nullable: false
                user_id:
                  type: string
                  description: 'The <code>id</code> of an existing record in the users table.'
                  example: voluptatem
                  nullable: false
                organizer_id:
                  type: string
                  description: 'The <code>id</code> of an existing record in the organizers table.'
                  example: soluta
                  nullable: false
                participation_type:
                  type: string
                  description: ''
                  example: paid
                  nullable: false
                  enum:
                    - paid
                    - free
                capacity:
                  type: integer
                  description: 'Must be at least 1.'
                  example: 23
                  nullable: false
                registration_deadline:
                  type: string
                  description: 'Must be a valid date. Must be a date before <code>start_date</code>.'
                  example: '2018-03-21'
                  nullable: false
                registration_status:
                  type: string
                  description: ''
                  example: open
                  nullable: false
                  enum:
                    - open
                    - closed
                    - full
                event_type:
                  type: string
                  description: ''
                  example: hybrid
                  nullable: false
                  enum:
                    - in_person
                    - online
                    - hybrid
                online_url:
                  type: string
                  description: 'This field is required when <code>event_type</code> is <code>online</code> or <code>hybrid</code>.  Must be a valid URL.'
                  example: 'http://www.block.net/velit-saepe-sunt-enim-reiciendis-suscipit'
                  nullable: true
                tags:
                  type: array
                  description: 'The <code>id</code> of an existing record in the tags table.'
                  example: null
                  items:
                    type: string
              required:
                - title
                - description
                - address
                - start_date
                - end_date
                - category_id
                - user_id
                - organizer_id
                - participation_type
                - capacity
                - registration_deadline
                - registration_status
                - event_type
      security: []
    delete:
      summary: ''
      operationId: deleteApiEventsSlug
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: slug
        description: 'The slug of the event.'
        example: voluptatem
        required: true
        schema:
          type: string
  /api/categories:
    get:
      summary: ''
      operationId: getApiCategories
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data: []
                properties:
                  data:
                    type: array
                    example: []
      tags:
        - Endpoints
      security: []
    post:
      summary: ''
      operationId: postApiCategories
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must not be greater than 100 characters.'
                  example: pdnpwakbnihfrfrss
                  nullable: false
                slug:
                  type: string
                  description: 'Must not be greater than 120 characters.'
                  example: znlttoruhj
                  nullable: false
                description:
                  type: string
                  description: ''
                  example: 'Eum modi neque dolore provident rerum eius.'
                  nullable: true
                is_active:
                  type: boolean
                  description: ''
                  example: false
                  nullable: false
                position:
                  type: integer
                  description: ''
                  example: 1
                  nullable: false
              required:
                - name
                - slug
      security: []
  '/api/categories/{slug}':
    get:
      summary: ''
      operationId: getApiCategoriesSlug
      description: ''
      parameters: []
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'No query results for model [App\Models\Category] fuga'
                properties:
                  message:
                    type: string
                    example: 'No query results for model [App\Models\Category] fuga'
      tags:
        - Endpoints
      security: []
    put:
      summary: ''
      operationId: putApiCategoriesSlug
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must not be greater than 100 characters.'
                  example: gzbfwrfnjtgyamtylgpe
                  nullable: false
                slug:
                  type: string
                  description: ''
                  example: null
                  nullable: false
                description:
                  type: string
                  description: ''
                  example: 'Cupiditate minus non asperiores eos molestiae sed error fuga.'
                  nullable: true
                is_active:
                  type: boolean
                  description: ''
                  example: true
                  nullable: false
                position:
                  type: integer
                  description: ''
                  example: 20
                  nullable: false
              required:
                - name
      security: []
    delete:
      summary: ''
      operationId: deleteApiCategoriesSlug
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: slug
        description: 'The slug of the category.'
        example: fuga
        required: true
        schema:
          type: string
tags:
  -
    name: Endpoints
    description: ''
