openapi: 3.0.3
info:
  title: Laravel
  description: ''
  version: 1.0.0
servers:
  -
    url: 'http://events_api.test'
paths:
  /api/events:
    get:
      summary: ''
      operationId: getApiEvents
      description: ''
      parameters: []
      responses:
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Server Error'
                properties:
                  message:
                    type: string
                    example: 'Server Error'
      tags:
        - Endpoints
      security: []
    post:
      summary: ''
      operationId: postApiEvents
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: bkkrijcquvepkoima
                  nullable: false
                slug:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: zcyobt
                  nullable: false
                description:
                  type: string
                  description: 'Must not be greater than 65535 characters.'
                  example: 'Mollitia aspernatur consequatur voluptatem consectetur.'
                  nullable: false
                address:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: htdvqopg
                  nullable: false
                feature_image:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: hrsqxevlq
                  nullable: true
                start_date:
                  type: string
                  description: 'Must be a valid date.'
                  example: '2025-02-09T15:05:17'
                  nullable: false
                end_date:
                  type: string
                  description: 'Must be a valid date. Must be a date after <code>start_date</code>.'
                  example: '2112-01-11'
                  nullable: false
                category_id:
                  type: string
                  description: 'The <code>id</code> of an existing record in the categories table.'
                  example: tenetur
                  nullable: false
                user_id:
                  type: string
                  description: 'The <code>id</code> of an existing record in the users table.'
                  example: magnam
                  nullable: false
                organizer_id:
                  type: string
                  description: 'The <code>id</code> of an existing record in the organizers table.'
                  example: non
                  nullable: false
                participation_type:
                  type: string
                  description: ''
                  example: paid
                  nullable: false
                  enum:
                    - paid
                    - free
                capacity:
                  type: integer
                  description: 'Must be at least 1.'
                  example: 40
                  nullable: false
                registration_deadline:
                  type: string
                  description: 'Must be a valid date. Must be a date before <code>start_date</code>.'
                  example: '2013-09-24'
                  nullable: false
                registration_status:
                  type: string
                  description: ''
                  example: closed
                  nullable: false
                  enum:
                    - open
                    - closed
                    - full
                event_type:
                  type: string
                  description: ''
                  example: hybrid
                  nullable: false
                  enum:
                    - in_person
                    - online
                    - hybrid
                online_url:
                  type: string
                  description: 'This field is required when <code>event_type</code> is <code>online</code> or <code>hybrid</code>.  Must be a valid URL.'
                  example: 'https://funk.com/incidunt-alias-est-excepturi-corporis.html'
                  nullable: true
                tags:
                  type: array
                  description: 'The <code>id</code> of an existing record in the tags table.'
                  example: null
                  items:
                    type: string
              required:
                - title
                - slug
                - description
                - address
                - start_date
                - end_date
                - category_id
                - user_id
                - organizer_id
                - participation_type
                - capacity
                - registration_deadline
                - registration_status
                - event_type
      security: []
  '/api/events/{slug}':
    get:
      summary: ''
      operationId: getApiEventsSlug
      description: ''
      parameters: []
      responses:
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Server Error'
                properties:
                  message:
                    type: string
                    example: 'Server Error'
      tags:
        - Endpoints
      security: []
    put:
      summary: ''
      operationId: putApiEventsSlug
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: xkonly
                  nullable: false
                slug:
                  type: string
                  description: ''
                  example: null
                  nullable: false
                description:
                  type: string
                  description: 'Must not be greater than 65535 characters.'
                  example: 'Ipsam placeat porro nemo quis dolor sapiente dolor.'
                  nullable: false
                address:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: ofpxgqvdgd
                  nullable: false
                feature_image:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: hccfmcjasljix
                  nullable: true
                start_date:
                  type: string
                  description: 'Must be a valid date.'
                  example: '2025-02-09T15:05:17'
                  nullable: false
                end_date:
                  type: string
                  description: 'Must be a valid date. Must be a date after <code>start_date</code>.'
                  example: '2075-11-05'
                  nullable: false
                category_id:
                  type: string
                  description: 'The <code>id</code> of an existing record in the categories table.'
                  example: ullam
                  nullable: false
                user_id:
                  type: string
                  description: 'The <code>id</code> of an existing record in the users table.'
                  example: ab
                  nullable: false
                organizer_id:
                  type: string
                  description: 'The <code>id</code> of an existing record in the organizers table.'
                  example: nisi
                  nullable: false
                participation_type:
                  type: string
                  description: ''
                  example: free
                  nullable: false
                  enum:
                    - paid
                    - free
                capacity:
                  type: integer
                  description: 'Must be at least 1.'
                  example: 65
                  nullable: false
                registration_deadline:
                  type: string
                  description: 'Must be a valid date. Must be a date before <code>start_date</code>.'
                  example: '2008-02-29'
                  nullable: false
                registration_status:
                  type: string
                  description: ''
                  example: open
                  nullable: false
                  enum:
                    - open
                    - closed
                    - full
                event_type:
                  type: string
                  description: ''
                  example: in_person
                  nullable: false
                  enum:
                    - in_person
                    - online
                    - hybrid
                online_url:
                  type: string
                  description: 'This field is required when <code>event_type</code> is <code>online</code> or <code>hybrid</code>.  Must be a valid URL.'
                  example: 'https://nicolas.com/sint-in-sed-fuga-fugiat-rerum.html'
                  nullable: true
                tags:
                  type: array
                  description: 'The <code>id</code> of an existing record in the tags table.'
                  example: null
                  items:
                    type: string
              required:
                - title
                - description
                - address
                - start_date
                - end_date
                - category_id
                - user_id
                - organizer_id
                - participation_type
                - capacity
                - registration_deadline
                - registration_status
                - event_type
      security: []
    delete:
      summary: ''
      operationId: deleteApiEventsSlug
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: slug
        description: 'The slug of the event.'
        example: premier-takeo-showcase
        required: true
        schema:
          type: string
  /api/categories:
    get:
      summary: ''
      operationId: getApiCategories
      description: ''
      parameters: []
      responses:
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Server Error'
                properties:
                  message:
                    type: string
                    example: 'Server Error'
      tags:
        - Endpoints
      security: []
    post:
      summary: ''
      operationId: postApiCategories
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must not be greater than 100 characters.'
                  example: wdcashgspxymckvwczr
                  nullable: false
                slug:
                  type: string
                  description: 'Must not be greater than 120 characters.'
                  example: aeukdmztmpfr
                  nullable: false
                description:
                  type: string
                  description: ''
                  example: 'Labore itaque sed in omnis dolorem.'
                  nullable: true
                is_active:
                  type: boolean
                  description: ''
                  example: false
                  nullable: false
                position:
                  type: integer
                  description: ''
                  example: 8
                  nullable: false
              required:
                - name
                - slug
      security: []
  '/api/categories/{slug}':
    get:
      summary: ''
      operationId: getApiCategoriesSlug
      description: ''
      parameters: []
      responses:
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Server Error'
                properties:
                  message:
                    type: string
                    example: 'Server Error'
      tags:
        - Endpoints
      security: []
    put:
      summary: ''
      operationId: putApiCategoriesSlug
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must not be greater than 100 characters.'
                  example: dqodlgbplj
                  nullable: false
                slug:
                  type: string
                  description: ''
                  example: null
                  nullable: false
                description:
                  type: string
                  description: ''
                  example: 'Eos quia in asperiores quia quibusdam.'
                  nullable: true
                is_active:
                  type: boolean
                  description: ''
                  example: true
                  nullable: false
                position:
                  type: integer
                  description: ''
                  example: 16
                  nullable: false
              required:
                - name
      security: []
    delete:
      summary: ''
      operationId: deleteApiCategoriesSlug
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: slug
        description: 'The slug of the category.'
        example: music
        required: true
        schema:
          type: string
tags:
  -
    name: Endpoints
    description: ''
